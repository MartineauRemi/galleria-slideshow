{"version":3,"sources":["layout/Header.js","components/Thumbnail.js","layout/Gallery.js","components/ArrowButton.js","pages/PaintingDetails.js","App.js","reportWebVitals.js","index.js"],"names":["Header","slideshowActive","setSlideshowActive","className","src","alt","width","height","onClick","Thumbnail","data","index","setCurrentPainting","mergeAnim","merge","slideInUp","fadeIn","fadeInAnimation","keyframes","styled","button","name","artist","images","thumbnail","Gallery","previousPainting","nextPainting","setCurrentPaintingIndex","useLayoutEffect","window","scrollTo","breakpointCols","default","columnClassName","map","ArrowButton","disabled","xmlns","fill","d","PaintingDetails","paintingIndex","paintingsNb","painting","slideshowLength","length","useState","modalActive","setModalActive","modalIsClosing","setModalisClosing","fadeInAnim","modalZoomAnim","zoomOut","zoomIn","Modal","section","Main","main","Footer","footer","setTimeout","gallery","media","hero","large","small","image","year","description","href","source","target","rel","PAINTINGS_NB","paintings","App","currentPaintingIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d69610c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header({slideshowActive, setSlideshowActive}) {\r\n    const logoURL = \"/assets/shared/logo.svg\"\r\n    \r\n    function onClickBtn(){\r\n        setSlideshowActive(!slideshowActive)\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__content\">\r\n                <img src={logoURL} alt=\"Welcome to Galleria\" width=\"170px\" height=\"48px\"/>\r\n                <button\r\n                    className=\"toggle-slideshow\"\r\n                    aria-label={`${slideshowActive? 'close' : 'open'} menu`}\r\n                    onClick={onClickBtn}>\r\n                    {slideshowActive? 'stop' : 'start'} slideshow\r\n                </button>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { merge, slideInUp, fadeIn } from 'react-animations'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nexport default function Thumbnail({data,index, setSlideshowActive, setCurrentPainting}) {\r\n    \r\n    function onClickThumbnail(){\r\n        setSlideshowActive(true)\r\n        setCurrentPainting(index)\r\n    }\r\n\r\n    \r\n    const mergeAnim = merge(slideInUp, fadeIn)\r\n    const fadeInAnimation = keyframes`${mergeAnim}`\r\n    const Thumbnail = styled.button`\r\n        animation: 1s ${fadeInAnimation};\r\n    ` \r\n\r\n    return (\r\n        <Thumbnail\r\n            className=\"thumbnail\"\r\n            onClick={onClickThumbnail}>\r\n                <figcaption>\r\n                    <h2>{data.name}</h2>\r\n                    <h3>{data.artist.name}</h3>\r\n                </figcaption>\r\n                <img src={data.images.thumbnail} alt={data.name} />\r\n        </Thumbnail>\r\n    )\r\n}\r\n","import React, { useLayoutEffect } from 'react'\r\nimport Thumbnail from '../components/Thumbnail'\r\nimport data from \"../data/data.json\"\r\nimport Masonry from \"react-masonry-css\"\r\n\r\nexport default function Gallery({setSlideshowActive, previousPainting, nextPainting, setCurrentPaintingIndex}) {\r\n    \r\n    //used for the responsive design of the masonry gallery\r\n    const breakpointColumnsObj = {\r\n        default: 4,\r\n        1440: 3,\r\n        1200: 2,\r\n        768: 1\r\n      };\r\n\r\n      //scroll to top when rerendering\r\n      useLayoutEffect(() => {\r\n        window.scrollTo(0, 0)\r\n      });\r\n\r\n    return (\r\n        <Masonry\r\n            breakpointCols={breakpointColumnsObj}\r\n            className=\"my-masonry-grid\"\r\n            columnClassName=\"my-masonry-grid__column\"\r\n\r\n            >\r\n            {data.map((thumbnail, index) => \r\n                <Thumbnail\r\n                    key={index}\r\n                    index={index}\r\n                    data={thumbnail}\r\n                    setSlideshowActive={setSlideshowActive}\r\n                    setCurrentPainting={setCurrentPaintingIndex}\r\n                    previousPainting={previousPainting}\r\n                    nextPainting={nextPainting}/>\r\n            )}\r\n        </Masonry>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ArrowButton({className, onClick, disabled}) {\r\n    return (\r\n        <button\r\n            className={`${className} ${disabled? className + '--disabled': null}`}\r\n            disabled={disabled}\r\n            onClick={onClick}>\r\n            <svg\r\n                width=\"26\"\r\n                height=\"24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <g\r\n                        fill=\"none\"\r\n                        fill-rule=\"evenodd\">\r\n                            <path\r\n                                d=\"M1.528 1.843l20.538 10.27L1.528 22.382V1.843z\"\r\n                                stroke-width=\"2\"/>\r\n                            <path\r\n                                fill=\"#D8D8D8\"\r\n                                d=\"M24.708.5h1v22.775h-1z\"/>\r\n                    </g>\r\n            </svg>\r\n        </button>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport data from \"../data/data.json\"\r\nimport { fadeIn, zoomIn, zoomOut } from 'react-animations'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport ArrowButton from '../components/ArrowButton'\r\n\r\nexport default function PaintingDetails({paintingIndex, previousPainting, nextPainting, paintingsNb}) {    \r\n    const painting = data[paintingIndex]\r\n    const slideshowLength = data.length\r\n    const viewImgURL = \"/assets/shared/icon-view-image.svg\"\r\n\r\n    const [modalActive, setModalActive] = useState(false)\r\n    const [modalIsClosing, setModalisClosing] = useState(false)\r\n\r\n    //keyframes animations\r\n    const fadeInAnim = keyframes`${fadeIn}`\r\n    const modalZoomAnim = keyframes`${modalIsClosing? zoomOut : zoomIn}`\r\n    \r\n    //applying animations to components\r\n    const Modal = styled.section`\r\n        img{\r\n            animation: .3s ${modalZoomAnim};\r\n        }\r\n    `\r\n\r\n    const Main = styled.main`\r\n        animation: .3s ${fadeInAnim};\r\n    `\r\n\r\n    const Footer = styled.footer`\r\n        &::after{\r\n            content: \"\";\r\n            width: ${((paintingIndex + 1) * 100) / slideshowLength}%;\r\n            height: 2px;\r\n            background: #000;\r\n            position: absolute;\r\n            top: -1.5px;\r\n            left: 0;\r\n            transition: all 0.3s ease-in-out;\r\n        }\r\n    `\r\n\r\n    //events functions\r\n    function onClickCloseModalbtn(){\r\n        setModalisClosing(true)\r\n        setTimeout(() => {\r\n            setModalisClosing(false)\r\n            setModalActive(false)\r\n        }, 200)\r\n    }\r\n\r\n    return (\r\n        <div className=\"painting-details\">\r\n            {modalActive\r\n            ?(\r\n                <Modal className={`painting-details__modal`}>\r\n                    <div className=\"painting-details__modal-content\">\r\n                        <button\r\n                            className=\"close-btn\"\r\n                            onClick={() => onClickCloseModalbtn()}\r\n                            >\r\n                            close\r\n                        </button>\r\n                        <img\r\n                            src={painting.images.gallery}\r\n                            alt={painting.name}/>\r\n                    </div>\r\n                </Modal>\r\n            )\r\n            : null}\r\n            <Main>\r\n                <aside>\r\n                    <div className=\"painting-details__hero-img-container\">\r\n                        <picture>\r\n                            <source media=\"(min-width: 768px)\" src={painting.images.hero.large}/>\r\n                            <img src={painting.images.hero.small} alt=\"\"/>\r\n                        </picture>\r\n                        <button\r\n                            className=\"view-image-btn\"\r\n                            onClick={() => setModalActive(true)}>\r\n                            <img src={viewImgURL} alt=\"view painting button\"/>\r\n                            <span>view image</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"container\">\r\n                        <figcaption>\r\n                            <h2>{painting.name}</h2>\r\n                            <h3>{painting.artist.name}</h3>\r\n                        </figcaption>\r\n                        <img\r\n                                className=\"painting-details__artist-img\"\r\n                                src={painting.artist.image}\r\n                                alt={painting.artist.name + ' portrait'} />\r\n                    </div>\r\n                </aside>\r\n\r\n                <article>\r\n                    <time>{painting.year}</time>\r\n                    <p>{painting.description}</p>\r\n                    <a\r\n                        className=\"link-btn\"\r\n                        href={painting.source}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\">\r\n                            go to source\r\n                    </a>\r\n                </article>\r\n            </Main>\r\n            \r\n            \r\n            <Footer>\r\n                <div className=\"painting-details__main-infos\">\r\n                    <strong>{painting.name}</strong>\r\n                    <span>{painting.artist.name}</span>\r\n                </div>\r\n\r\n                <div className=\"painting-details__ctrls\">\r\n                    <ArrowButton\r\n                        className=\"painting-details__previous-painting-btn previous-painting-btn\"\r\n                        onClick={previousPainting}\r\n                        disabled = {paintingIndex === 0}>\r\n                    </ArrowButton>\r\n                    <ArrowButton\r\n                        className=\"next-painting-btn\"\r\n                        onClick={nextPainting}\r\n                        disabled={paintingIndex === paintingsNb - 1}>\r\n                    </ArrowButton>\r\n                </div>\r\n            </Footer>\r\n        </div>\r\n    )\r\n}\r\n","import './styles/styles.scss'\nimport paintings from './data/data.json'\nimport {useState} from 'react'\nimport Header from './layout/Header'\nimport Gallery from \"./layout/Gallery\"\nimport PaintingDetails from './pages/PaintingDetails'\n\nconst PAINTINGS_NB = paintings.length\n\nfunction App() {\n  const [slideshowActive, setSlideshowActive] = useState(false)\n  \n  //The painting displayed in the slideshow\n  const [currentPaintingIndex, setCurrentPaintingIndex] = useState(0)\n\n  //enable 'previous' and 'next' buttons\n  //in the 'PaintingsDetail' component to enable a loop\n  const nextPainting = () => setCurrentPaintingIndex((currentPaintingIndex + 1) % PAINTINGS_NB)\n  const previousPainting = () => setCurrentPaintingIndex(currentPaintingIndex === 0 ? 0 : currentPaintingIndex - 1)\n\n\n  return (\n    <div className=\"App\">\n      <Header slideshowActive={slideshowActive} setSlideshowActive={setSlideshowActive}/>\n      {slideshowActive\n      ? <PaintingDetails\n          paintingIndex={currentPaintingIndex}\n          previousPainting={previousPainting}\n          nextPainting={nextPainting}\n          paintingsNb={PAINTINGS_NB} />\n\n      : <Gallery\n          setSlideshowActive={setSlideshowActive}\n          setCurrentPaintingIndex={setCurrentPaintingIndex}\n          previousPainting={previousPainting}\n          nextPainting={nextPainting}/>}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}